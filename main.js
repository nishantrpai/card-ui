import './style.css'
import { write } from './svg.js'
document.querySelector('#message').addEventListener('input', (e) => {
  // add svg to preview
  let words = e.target.value.split(' ');
  words = words.filter(word => word.length > 0);
  let width = 102;
  let y = 50;
  console.log(words);
  let svg = '';
  words.forEach((word, i) => {
    svg += write(word, '#fff', 1, y);
    y += 10;
    width += 10;
  });
  document.querySelector('#preview').innerHTML = `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 ${width}" width="500">
      <rect xmlns="http://www.w3.org/2000/svg" x="0" y="0" width="100%" height="100%" fill="#000"/>
      ${svg}
      <g transform="scale(1.5) translate(50, ${y})" fill="#fff" fill-rule="evenodd" clip-rule="evenodd" aria-label="N">
        <path d="M 50.484,26.688 C 50.310,22.597 50.365,22.596 50.246,18.504 C 50.246,14.945 50.191,14.946 50.246,11.387 C 49.363,3.583 50.246,7.736 50.246,4.086 C 52.163,9.110 51.541,4.823 54.602,13.867 C 57.425,18.867 57.217,18.969 60.355,23.805 C 64.058,29.978 64.029,29.994 67.809,36.121 C 70.505,43.766 70.716,40.882 73.672,45.613 C 75.920,43.898 75.187,46.497 77.172,41.582 C 78.984,37.269 79.363,37.527 80.559,32.871 C 82.550,27.423 82.511,27.420 84.227,21.883 C 85.178,18.146 85.343,18.195 86.145,14.414 C 87.214,7.338 87.014,11.057 87.898,7.703 C 88.858,11.843 88.730,8.147 89.176,16.031 C 87.536,21.646 89.497,20.257 89.176,24.531 C 92.014,25.940 90.235,26.394 94.574,25.527 C 98.833,20.898 97.254,25.096 99.656,22.844 C 101.344,33.162 102.643,29.900 102.195,43.531 C 102.195,48.643 102.613,48.617 102.195,53.754 C 102.195,57.105 102.195,57.105 102.195,60.457 C 101.619,66.376 102.195,63.664 102.195,66.871 C 102.895,64.350 102.652,67.263 104.262,62.230 C 106.756,58.896 106.500,58.760 109.406,55.691 C 112.420,51.787 112.535,51.908 115.820,48.254 C 119.690,44.709 119.453,44.479 123.473,41.074 C 125.569,38.975 125.612,39.019 127.664,36.875 C 131.433,35.064 129.463,35.072 131.262,33.270 C 125.961,31.001 131.056,31.117 126.910,28.980 C 132.103,24.488 129.042,24.442 137.422,20.152 C 139.716,18.904 139.392,18.546 141.488,17.098 C 145.565,13.080 145.425,13.085 148.840,8.516 C 151.168,5.506 150.949,5.576 152.258,2.090 C 154.782,-5.016 153.457,-1.668 153.418,-5.832 C 148.608,-4.536 152.037,-6.658 146.770,-1.195 C 144.760,5.538 143.591,4.581 143.383,12.402 C 141.597,22.102 141.445,22.059 140.141,31.848 C 139.647,36.198 139.494,36.176 139.176,40.551 C 138.491,45.244 138.667,45.253 138.180,49.957 C 137.221,55.357 137.993,52.785 138.180,55.633 C 140.172,53.379 139.196,55.925 142.129,51.094 C 144.418,47.919 144.649,48.150 147.133,45.176 C 149.550,43.476 149.185,43.102 151.664,41.461 C 153.242,39.190 153.614,39.603 155.262,37.430 C 157.202,35.417 157.197,35.743 159.574,34.566 C 162.399,34.024 162.194,33.626 165.246,33.848 C 168.213,33.848 168.201,33.665 171.180,33.848 C 174.210,34.261 174.146,33.848 177.113,33.848" stroke-width="5.349" stroke="black" fill="none" stroke-linecap="round"/>
      </g>
    </svg>
  `
});